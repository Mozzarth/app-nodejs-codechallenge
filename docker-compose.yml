version: "3.7"
services:
 postgres:
  image: postgres:14
  ports:
   - "5432:5432"
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_DB=transaction
  volumes:
   - postgres-data:/var/lib/postgresql/data
  restart: always

 mongo:
  image: mongo:7.0.5
  ports:
   - 27017:27017
  environment:
   MONGO_INITDB_ROOT_USERNAME: mongo
   MONGO_INITDB_ROOT_PASSWORD: mongo-password
   MONGO_INITDB_DATABASE: mongo
  volumes:
   - mongo-data:/data/db
  restart: always

 mongo-client:
  image: mongo-express:1.0.2-20-alpine3.19
  restart: always
  ports:
   - 8080:8081
  environment:
   ME_CONFIG_MONGODB_SERVER: mongo
   ME_CONFIG_MONGODB_PORT: 27017
   ME_CONFIG_BASICAUTH_USERNAME: mongo
   ME_CONFIG_BASICAUTH_PASSWORD: mongo-password
   ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
   ME_CONFIG_MONGODB_ADMINPASSWORD: mongo-password
  depends_on:
   - mongo

 zookeeper:
  image: confluentinc/cp-zookeeper:latest
  container_name: zookeeper
  ports:
   - 2181:2181
  environment:
   ZOOKEEPER_CLIENT_PORT: 2181
   ZOOKEEPER_TICK_TIME: 2000
   ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN
   ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL: WARN
  healthcheck:
   test: nc -z localhost 2181 || exit -1
   start_period: 15s
   interval: 5s
   timeout: 10s
   retries: 10
  volumes:
   - ./zoo/data:/var/lib/zookeeper/data
   - ./zoo/log:/var/lib/zookeeper/datalog

 kafka:
  container_name: kafka
  image: confluentinc/cp-kafka:latest
  restart: always
  depends_on:
   zookeeper:
    condition: service_healthy
  ports:
   - 9092:9092
  environment:
   KAFKA_BROKER_ID: 1
   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
   KAFKA_LOG4J_LOGGERS: "kafka=WARN,kafka.controller=WARN,kafka.producer.async.DefaultEventHandler=WARN,state.change.logger=WARN"
   KAFKA_TOOLS_LOG4J_LOGLEVEL: WARN
   WAIT_HOSTS: zookeeper:2181
   WAIT_TIMEOUT: 50
   WAIT_AFTER: 20
  healthcheck:
   test: nc -z kafka 29092 || exit -1
   start_period: 20s
   interval: 5s
   timeout: 10s
   retries: 10

 transaction:
  build:
   context: ./transaction
  restart: always
  environment:
   - APP_PORT=3000
   - BASE_CONTEXT_PATH=transaction
   - POSTGRES_HOST=postgres
   - POSTGRES_PORT=5432
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_DATABASE=postgres
   - MONGO_USER=mongo
   - MONGO_PASSWORD=mongo-password
   - MONGO_DATABASE=mongo
   - MONGO_HOST=mongo
   - KAFKA_HOST=kafka
   - KAFKA_PORT=29092
   - KAFKA_PRODUCER_SEND_TIMEOUT=30000
  ports:
   - 3000:3000
  depends_on:
   postgres:
    condition: service_started
   mongo:
    condition: service_started
   kafka:
    condition: service_healthy
 anti-fraud:
  build:
   context: ./anti-fraud
  restart: always
  environment:
   - APP_PORT=3001
   - BASE_CONTEXT_PATH=anti-fraude
   - KAFKA_HOST=kafka
   - KAFKA_PORT=29092
   - KAFKA_PRODUCER_SEND_TIMEOUT=30000
  ports:
   - 3001:3001
  depends_on:
   postgres:
    condition: service_started
   mongo:
    condition: service_started
   kafka:
    condition: service_healthy
 migration:
  build:
   context: ./transaction
   dockerfile: Dockerfile.migration
  environment:
   - POSTGRES_HOST=postgres
   - POSTGRES_PORT=5432
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
   - POSTGRES_DATABASE=postgres
  depends_on:
   postgres:
    condition: service_started
volumes:
 postgres-data:
 mongo-data:
 zookeeper-data:
 zookeeper-log-data:
